import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb


df = pd.read_csv(r'C:\Users\Ankit Sharma\OneDrive\Desktop\DsResearch\DsResearch\Banking\banking_data.csv')
pd.set_option('display.max_rows',None)
df.head() 
df.columns        

#-	What is the distribution of age among the clients?
count,bin_edges = np.histogram(df['age'],bins = np.arange(0,100,10))

plt.figure(figsize=(12,6))
plt.hist(df['age'], bins = np.arange(0,100,10), edgecolor = 'black', color = 'red')
plt.title('age distribution')
plt.xlabel('age')
plt.ylabel('Frequency')

for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i]+bin_edges[i+1])/2,count[i],str(count[i]), ha = 'center', va='bottom')
         
plt.show()
for i in range(len(bin_edges)-1):
    print(f"{bin_edges[i]:.2f} to {bin_edges[i+1]:.2f}, Count: {count[i]}")


#-	How does the job type vary among the clients?
plt.figure(figsize=(10, 6))
bars = plt.barh(df['job'].unique(), df['job'].value_counts(), color = 'red', edgecolor='black')

for bar in bars:
    xval = bar.get_width()
    plt.text(xval, bar.get_y() + bar.get_height()/2, round(xval, 2), va='center', ha='left', rotation = 270)

plt.title('Frequency of Months')
plt.xlabel('Frequency')
plt.ylabel('Months')
plt.tight_layout()
plt.show()
#-	What is the marital status distribution of the clients?

df['marital_status'].value_counts()
pd.set_option('display.max_rows',None)
plt.show()
plt.title('Marital status')
plt.xlabel('Marital status')
plt.ylabel('frequency')
df['marital_status'].value_counts().plot(kind='bar', color='red', edgecolor='black')


#-	What is the level of education among the clients?

df['education'].value_counts()
pd.set_option('display.max_rows',None)
plt.show()
plt.title('education distribution')
plt.xlabel('education level')
plt.ylabel('no. of clients')
df['education'].value_counts().plot(kind='bar', color='red', edgecolor='black')

#-	What proportion of clients have credit in default?

plt.figure(figsize=(12,6))
plt.title('proportion of clients have credit in default')
yes =df['default'].value_counts().get('yes')
no = df['default'].value_counts().get('no')
size = [yes, no]
labels = ['yes', 'no']
plt.pie(size,labels=labels,autopct=lambda pct: f'{pct:.1f}% ({int(pct * sum(size) / 100)})',pctdistance=1.6,labeldistance=1.1)


#-	What is the distribution of average yearly balance among the clients?
max(df['balance'])
min(df['balance'])
maximum  = (df['balance']==102127).sum()
print(maximum)
minimum  = (df['balance']==-8019).sum()
print(minimum)
counts, bin_edges = np.histogram(df['balance'], bins= np.arange(-10000,30000,2000))

plt.figure(figsize=(12, 6))
plt.hist(df['balance'], bins= np.arange(-10000,30000,2000), color='blue', edgecolor='black')
plt.title('Histogram of Balances')
plt.xlabel('Balance')
plt.ylabel('Frequency')
for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i] + bin_edges[i+1]) / 2, counts[i], str(counts[i]), ha='center', va='bottom')
plt.tight_layout()
plt.show()

for i in range(len(bin_edges)-1):
    print(f"{bin_edges[i]:.2f} to {bin_edges[i+1]:.2f}, Count: {counts[i]}")



#-	How many clients have housing loans?
plt.figure(figsize=(12,6))
plt.title('housing loans')
yes =df['housing'].value_counts().get('yes')
no = df['housing'].value_counts().get('no')
size = [yes, no]
labels = ['yes', 'no']
plt.pie(size,labels=labels,autopct=lambda pct: f'{pct:.1f}% ({int(pct * sum(size) / 100)})',labeldistance=0.3)


#-	How many clients have personal loans?
plt.figure(figsize=(12,6))
plt.title('personal loans')
yes =df['loan'].value_counts().get('yes')
no =df['loan'].value_counts().get('no')
size = [yes,no]
labels = ['yes', 'no']
df['loan'].value_counts()
plt.pie(size,labels=labels,autopct=lambda pct: f'{pct:.1f}% ({int(pct * sum(size) / 100)})',labeldistance=0.3)


#-	What are the communication types used for contacting clients during the campaign?
plt.figure(figsize=(10, 6))
bars = plt.bar(df['contact'].unique(), df['contact'].value_counts(), color = 'red', edgecolor='black')

for bar in bars:
    yval = bar.get_height()
    plt.text( bar.get_x() + bar.get_width()/2,yval, round(yval, 2), va='bottom', ha='center')

plt.title('Frequency of contact')
plt.xlabel('Frequency')
plt.ylabel('contact')
plt.tight_layout()
plt.show()


#-	What is the distribution of the last contact day of the month?
plt.figure(figsize = (12,6))
plt.title('last contact day of the month')
plt.xlabel('day')
plt.ylabel('no. of contacts')
plt.hist(df['day'], bins = np.arange(0,35,4),edgecolor ='black')
counts, bin_edges = np.histogram(df['day'], bins=np.arange(0,35,4))
plt.figure(figsize=(10, 6))
for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i] + bin_edges[i+1]) / 2, counts[i], str(counts[i]), ha='center', va='bottom')

plt.show()



#-	How does the last contact month vary among the clients?

plt.figure(figsize=(10, 6))
bars = plt.bar(df['month'].unique(), df['month'].value_counts(), edgecolor='black')


for bar in bars:
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval,2), va='bottom', ha='center')

plt.title('Frequency of Months')
plt.xlabel('Months')
plt.ylabel('Frequency')

plt.show()

#- What is the distribution of the number of days passed since the client was last contacted from a previous campaign?
counts, bin_edges = np.histogram(df['duration'], bins = np.arange(100,2000,100))

plt.figure(figsize = (12,6))

plt.title('duration')
plt.xlabel('time in seconds')
plt.ylabel('no. of contacts')
plt.hist(df['duration'], edgecolor ='black',bins = np.arange(100,2000,100))

for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i] + bin_edges[i+1])/2, counts[i], str(counts[i]), ha = 'center', va = 'bottom')

plt.show()
for i in range(len(bin_edges)-1):
    print(f"{bin_edges[i]:.2f} to {bin_edges[i+1]:.2f}, Count: {counts[i]}")




#	How many contacts were performed during the campaign for each client?
count, bin_edges = np.histogram(df['campaign'],bins = np.arange(0,50,2))

plt.figure(figsize =(12,8))
plt.hist(df['campaign'],bins = np.arange(0,50,2), color = 'red', edgecolor = 'black')
plt.title('Campaign vs Number of Occurrences')
plt.xlabel('Campaign')
plt.ylabel('Number of Occurrences')

for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i]+bin_edges[i+1])/2, count[i], str(count[i]), ha = 'center', va='bottom')

plt.show()

for i in range(len(bin_edges)-1):
    print(f"{bin_edges[i]:.0f} to {bin_edges[i+1]:.0f}, count : {count[i]}")

#	What is the distribution of the number of days passed since the client was last contacted from a previous campaign?
count,bin_edges = np.histogram(df['pdays'],bins = np.arange(0,800,50))

plt.figure(figsize=(12,6))
plt.hist(df['pdays'], bins = np.arange(0,800,50), edgecolor = 'black', color = 'red')
plt.title('no. of days since the client was last contacted')
plt.xlabel('days')
plt.ylabel('Frequency')

for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i]+bin_edges[i+1])/2,count[i],str(count[i]), ha = 'center', va='bottom')
         
plt.show()
for i in range(len(bin_edges)-1):
    print(f"{bin_edges[i]:.2f} to {bin_edges[i+1]:.2f}, Count: {count[i]}")





#	How many contacts were performed before the current campaign for each client?
count,bin_edges = np.histogram(df['previous'],bins= np.arange(0,20,1))

plt.figure(figsize=(12,6))
plt.hist(df['previous'], bins= np.arange(0,20,1), edgecolor = 'black', color = 'red')
#plt.title('previous contact')
plt.xlabel('previous contact')
plt.ylabel('frequency')

for i in range(len(bin_edges)-1):
    plt.text((bin_edges[i]+bin_edges[i+1])/2,count[i],str(count[i]), ha = 'center', va='bottom')
         
plt.show()
for i in range(len(bin_edges)-1):
    print(f"{bin_edges[i]:.2f} to {bin_edges[i+1]:.2f}, Count: {count[i]}")


#	What were the outcomes of the previous marketing campaigns?
plt.title('outcome distribution')
plt.xlabel('poutcomes')
plt.ylabel('frequency')
bars = plt.bar(df['poutcome'].unique(),df['poutcome'].value_counts(), color = 'red')

for bar in bars:
    yval = bar.get_height()
    plt.text( bar.get_x() + bar.get_width()/2,yval, round(yval, 2), va='bottom', ha='center')

plt.show()
    

#	What is the distribution of clients who subscribed to a term deposit vs. those who did not?
plt.title('term desposit distribution')
plt.xlabel('term deposit')
plt.ylabel('frequency')
yes = df['y'].value_counts().get('yes')
print(yes)
no = df['y'].value_counts().get('no')
print(no)
sizes = [yes, no]
labels = ['yes','no']
plt.pie(sizes,labels= labels,autopct=lambda pct: f'{pct:.1f}% ({int(pct * sum(size) / 100)})',labeldistance=0.3, pctdistance= 1.6 )
plt.show()

#	Are there any correlations between different attributes and the likelihood of subscribing to a term deposit?
df['y_numeric'] = df['y'].map({'yes': 1, 'no': 0})
correlations = df.corr(numeric_only=True)['y_numeric'].sort_values()
print(correlations)
